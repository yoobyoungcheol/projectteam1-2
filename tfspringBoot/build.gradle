plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.TFteamAI'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'	// JPA 코드
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 타임리프 코드
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// lombok 관련 설정 코드
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'  // 테스트용
	testAnnotationProcessor 'org.projectlombok:lombok'   // 테스트용

	// MQTT 설정 관련 코드
	// https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3
	implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
	// https://mvnrepository.com/artifact/org.springframework/spring-messaging
	implementation 'org.springframework:spring-messaging'
	// Spring Integration MQTT
	implementation 'org.springframework.integration:spring-integration-mqtt'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'  // WebSocket

}

tasks.named('test') {
	useJUnitPlatform()
}
